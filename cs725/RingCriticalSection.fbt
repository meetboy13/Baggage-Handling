<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd" >
<FBType Name="RingCriticalSection" Comment="Basic Function Block Type" >
  <Identification Standard="61499-2" />
  <VersionInfo Organization="Rockwell Automation" Version="0.2" Author="JHC" Date="2003-12-04" Remarks="Renamed for better indexing." />
  <VersionInfo Organization="Rockwell Automation" Version="0.1" Author="JHC" Date="2002-11-05" Remarks="Corrected missing ST element in Algorithm REQ." />
  <VersionInfo Organization="Rockwell Automation" Version="0.0" Author="JHC" Date="2000-05-30" />
  <CompilerInfo header="package fb.rt.cs725;" >
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" >
        <With Var="INCOMING1" />
        <With Var="INCOMING2" />
        <With Var="EXITING" />
        <With Var="ENTERED" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request" >
        <With Var="INCOMING1" />
        <With Var="INCOMING2" />
        <With Var="EXITING" />
        <With Var="ENTERED" />
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm" >
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation" >
      </Event>
      <Event Name="START1" >
      </Event>
      <Event Name="STOP1" >
      </Event>
      <Event Name="START2" >
      </Event>
      <Event Name="STOP2" >
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="INCOMING1" Type="BOOL" Comment="Input event qualifier" />
      <VarDeclaration Name="INCOMING2" Type="BOOL" />
      <VarDeclaration Name="EXITING" Type="BOOL" />
      <VarDeclaration Name="ENTERED" Type="BOOL" />
    </InputVars>
  </InterfaceList>
  <BasicFB>
    <InternalVars>
      <VarDeclaration Name="TOKEN_CLIENT" Type="BOOL" />
      <VarDeclaration Name="TOKEN_BLOCK" Type="BOOL" />
    </InternalVars>
    <ECC >
      <ECState Name="START" Comment="Initial State" x="482.35294" y="417.64706" >
      </ECState>
      <ECState Name="INIT" Comment="Initialization" x="923.5294" y="141.17647" >
        <ECAction Algorithm="INIT" Output="INITO" />
      </ECState>
      <ECState Name="PASS" Comment="Normal execution" x="235.29411" y="1923.5294" >
        <ECAction Algorithm="PASS" />
      </ECState>
      <ECState Name="CLIENT1" x="2923.5293" y="223.5294" >
        <ECAction Algorithm="CLIENT1" Output="CNF" />
        <ECAction Output="START1" />
      </ECState>
      <ECState Name="CLIENT2" x="2670.5881" y="917.64703" >
        <ECAction Algorithm="CLIENT2" Output="CNF" />
        <ECAction Output="START2" />
      </ECState>
      <ECState Name="RETURN_HOLD" x="3129.4116" y="1447.0588" >
        <ECAction Algorithm="CLIENT2_HOLD" />
        <ECAction Output="STOP2" />
      </ECState>
      <ECState Name="CLIENT1_HOLD" x="4111.7646" y="588.2353" >
        <ECAction Algorithm="CLIENT1_HOLD" Output="CNF" />
        <ECAction Output="STOP1" />
      </ECState>
      <ECState Name="CLIENT2_WAIT" x="2688.2354" y="705.8823" >
        <ECAction Algorithm="CLIENT2_HOLD" Output="CNF" />
        <ECAction Output="STOP2" />
      </ECState>
      <ECState Name="CLIENT1_WAIT" x="2711.7646" y="511.7647" >
        <ECAction Algorithm="CLIENT1_HOLD" Output="CNF" />
        <ECAction Output="STOP1" />
      </ECState>
      <ECState Name="RETURN" x="2870.5881" y="1970.5883" >
        <ECAction Algorithm="RETURN" Output="CNF" />
        <ECAction Algorithm="PASS" />
      </ECState>
      <ECTransition Source="START" Destination="INIT" Condition="INIT" x="688.2353" y="270.58823" />
      <ECTransition Source="INIT" Destination="START" Condition="1" x="482.35294" y="129.41176" />
      <ECTransition Source="PASS" Destination="START" Condition="1" x="164.70587" y="1588.2352" />
      <ECTransition Source="CLIENT2" Destination="RETURN_HOLD" Condition="REQ&#38;!EXITING" x="3494.1177" y="1147.0588" />
      <ECTransition Source="START" Destination="CLIENT1" Condition="REQ&#38;!INCOMING1 &#38;&#38; !TOKEN_CLIENT" x="1917.647" y="341.17645" />
      <ECTransition Source="START" Destination="CLIENT2" Condition="REQ&#38;!INCOMING2 &#38;&#38; TOKEN_CLIENT" x="1829.4117" y="823.5294" />
      <ECTransition Source="CLIENT1" Destination="CLIENT1_HOLD" Condition="REQ&#38;!ENTERED" x="3864.7058" y="394.11765" />
      <ECTransition Source="CLIENT1_HOLD" Destination="RETURN_HOLD" Condition="REQ&#38;!EXITING" x="4241.1763" y="1152.9412" />
      <ECTransition Source="START" Destination="CLIENT2_WAIT" Condition="REQ&#38;!INCOMING2 &#38;&#38; !TOKEN_CLIENT" x="1770.5883" y="705.8823" />
      <ECTransition Source="START" Destination="CLIENT1_WAIT" Condition="REQ&#38;!INCOMING1 &#38;&#38; TOKEN_CLIENT" x="1800.0" y="511.7647" />
      <ECTransition Source="CLIENT1_WAIT" Destination="START" Condition="1" x="1223.5294" y="452.94116" />
      <ECTransition Source="CLIENT2_WAIT" Destination="START" Condition="1" x="1200.0" y="529.41174" />
      <ECTransition Source="RETURN_HOLD" Destination="RETURN" Condition="REQ&#38;EXITING" x="2747.0588" y="1700.0" />
      <ECTransition Source="RETURN" Destination="START" Condition="1" x="1552.9412" y="1447.0588" />
      <ECTransition Source="START" Destination="PASS" Condition="REQ&#38;!TOKEN_BLOCK" x="682.3529" y="1305.8823" />
      <ECTransition Source="RETURN_HOLD" Destination="RETURN" Condition="EXITING" x="3129.4116" y="1705.8823" />
    </ECC>
  <Algorithm Name="INIT" Comment="Initialization algorithm" >
    <ST Text="TOKEN_BLOCK := FALSE;&#10;TOKEN_CLIENT := FALSE;&#10;" />
  </Algorithm>
  <Algorithm Name="PASS" Comment="Normally executed algorithm" >
    <ST Text="IF TOKEN_CLIENT THEN&#10;TOKEN_CLIENT := FALSE;&#10;ELSE&#10;TOKEN_CLIENT := TRUE;&#10;END_IF&#10;" />
  </Algorithm>
  <Algorithm Name="CLIENT1" >
    <ST Text="System.out.println(&#34;>>>>    CLIENT ONE HAS CRITICAL SECTION&#34;);&#10;TOKEN_BLOCK := TRUE;&#10;START1.serviceEvent(this);&#10;STOP2.serviceEvent(this);&#10;" />
  </Algorithm>
  <Algorithm Name="CLIENT2" >
    <ST Text="System.out.println(&#34;>>>>    CLIENT TWO HAS CRITICAL SECTION&#34;);&#10;TOKEN_BLOCK := TRUE;&#10;STOP1.serviceEvent(this);&#10;START2.serviceEvent(this);&#10;" />
  </Algorithm>
  <Algorithm Name="RETURN" >
    <ST Text="System.out.println(&#34;>>>>    EXITING CRITICAL SECTION&#34;);&#10;TOKEN_BLOCK := FALSE;&#10;START1.serviceEvent(this);&#10;START2.serviceEvent(this);&#10;" />
  </Algorithm>
  <Algorithm Name="CLIENT1_HOLD" >
    <ST Text="STOP1.serviceEvent(this);&#10;" />
  </Algorithm>
  <Algorithm Name="CLIENT2_HOLD" >
    <ST Text="STOP2.serviceEvent(this);&#10;" />
  </Algorithm>
  </BasicFB>
</FBType>
